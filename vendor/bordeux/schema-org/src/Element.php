<?php
namespace Bordeux\SchemaOrg;

/**
 * Generated by bordeux/schema
 *
 * @author Krzysztof Bednarczyk <schema@bordeux.net>
 */
class Element implements \JsonSerializable
{

    /**
     * @var string|null
     */
    protected $_id;


    /**
     * @var mixed[]
     */
    protected $_data = [];

    /**
     * Element constructor.
     * @author Krzysztof Bednarczyk
     * @param null|string $id Url to element
     */
    public function __construct($id = null)
    {
        $this->_id = $id;
    }


    /**
     * @author Krzysztof Bednarczyk
     * @param string $name
     * @param mixed $value
     * @return $this
     */
    public function  __set($name, $value)
    {
        $this->_data[$name] = $value;
        return $this;
    }


    /**
     * @author Krzysztof Bednarczyk
     * @param string $name
     * @return mixed|null
     */
    public function __get($name)
    {
        return isset($this->_data[$name]) ? $this->_data[$name] : null;
    }


    /**
     * @author Krzysztof Bednarczyk
     * @param string $name
     * @return bool
     */
    public function __isset($name)
    {
        return isset($this->_data[$name]);
    }


    /**
     * @author Krzysztof Bednarczyk
     * @param string $name
     */
    public function __unset($name)
    {
        if (isset($this->_data[$name])) {
            unset($this->_data[$name]);
        }
    }


    /**
     * @author Krzysztof Bednarczyk
     * @param string $name
     * @param mixed[] $arguments
     * @return Element|mixed|null
     */
    public function __call($name, $arguments)
    {
        $type = substr($name, 0, 3);
        $name = lcfirst(substr($name, 3));

        if (empty($name)) {
            throw new \InvalidArgumentException("Method not found {$name}");
        }

        switch ($type) {
            case "get":
                return $this->__get($name);
            case "set":
                return $this->__set($name, array_pop($arguments));
        }

        throw new \InvalidArgumentException("Method not found {$name}");
    }


    /**
     * Get id value
     * @author Krzysztof Bednarczyk
     * @return string
     */
    public function getId()
    {
        return $this->_id;
    }

    /**
     * Set id value
     * @author Krzysztof Bednarczyk
     * @param string $id
     * @return  $this
     */
    public function setId($id)
    {
        $this->_id = $id;
        return $this;
    }


    public function toArray()
    {
        $result = $this->_data;

        if ($this->_id) {
            $result['@id'] = $this->_id;
        }

        $class = explode('\\', get_called_class());
        $result['@type'] = array_pop($class);
        $result['@context'] = "http://schema.org";
        return $result;
    }


    /**
     * @author Krzysztof Bednarczyk
     * @return string
     */
    public function __toString()
    {
        return json_encode($this->jsonSerialize());
    }

    /**
     * @inheritdoc
     */
    public function jsonSerialize()
    {
        return $this->toArray();
    }
}